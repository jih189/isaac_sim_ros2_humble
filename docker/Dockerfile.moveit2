###########################################
# ROS humble and OMPL image
###########################################
FROM isaac-sim-ros2-ompl AS isaac-sim-ros2-ompl-base

USER root

ARG ROS_DISTRO=humble
ARG USERNAME=ros

###################################################
# MoveIt 2 CI
###################################################

ENV TERM=xterm

# download moveit2 source code

RUN mkdir -p /home/$USERNAME/ws_moveit/src && \
    cd /home/$USERNAME/ws_moveit/src && \
    git clone https://github.com/moveit/moveit2.git -b $ROS_DISTRO

# install dependencies
RUN cd /home/$USERNAME/ws_moveit \
    # Update apt package list as previous containers clear the cache
    apt-get -q update && \
    apt-get -q -y upgrade && \
    #
    # Install some base dependencies
    apt-get -q install --no-install-recommends -y \
        # Some basic requirements
        wget git sudo curl \
        # Preferred build tools
        clang clang-format-14 clang-tidy clang-tools \
        ccache && \
    #
    # Globally disable git security
    # https://github.blog/2022-04-12-git-security-vulnerability-announced
    git config --global --add safe.directory "*" && \
    #
    # Fetch all dependencies from moveit2.repos
    vcs import src < src/moveit2/moveit2.repos && \
    if [ -r src/moveit2/moveit2_${ROS_DISTRO}.repos ] ; then vcs import src < src/moveit2/moveit2_${ROS_DISTRO}.repos ; fi && \
    #
    # Download all dependencies of MoveIt
    rosdep update && \
    DEBIAN_FRONTEND=noninteractive \
    rosdep install -y --from-paths src --ignore-src --rosdistro ${ROS_DISTRO} --as-root=apt:false && \
    # Clear apt-cache to reduce image size
    rm -rf /var/lib/apt/lists/*

# Export ROS_UNDERLAY for downstream docker containers
ENV ROS_UNDERLAY=/home/$USERNAME/ws_moveit/install
WORKDIR $ROS_UNDERLAY/..

# # remove the ompl from ROS, because we want to use the ompl built from source.
# RUN apt-get -y remove $(apt list --installed | awk -F/ '{print $1}' | grep ros-humble-ompl)

# build the moveit2
RUN --mount=type=cache,target=/home/$USERNAME/.ccache/ \
    # Enable ccache
    PATH=/usr/lib/ccache:$PATH && \
    # Fetch required upstream sources for building
    vcs import src < src/moveit2/moveit2.repos && \
    if [ -r "src/moveit2/moveit2_${ROS_DISTRO}.repos" ] ; then vcs import src < "src/moveit2/moveit2_${ROS_DISTRO}.repos" ; fi && \
    #
    . "/opt/ros/${ROS_DISTRO}/setup.sh" &&\
    colcon build \
            --cmake-args -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING=OFF -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DOMPL_DIR=/usr/share/ompl/cmake \
            --ament-cmake-args -DCMAKE_BUILD_TYPE=Release \
            --event-handlers desktop_notification- status- && \
    ccache -s 
    # && \
    #
    # Update /ros_entrypoint.sh to source our new workspace
    # sed -i "s#/opt/ros/\$ROS_DISTRO/setup.bash#$ROS_UNDERLAY/setup.sh#g" /ros_entrypoint.sh
    